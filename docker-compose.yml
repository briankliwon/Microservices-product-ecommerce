version: "3.8"
services:
  proxy:
    image: traefik:v2.9
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels: {}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host

  product:
    container_name: product-catalog-product-services
    build: ./product
    command:
      - "-mongoURI"
      - "mongodb://db:27017/"
    labels: 
      - "traefik.http.routers.product.rule=PathPrefix(`/api/product/`)"
      - "traefik.http.services.product.loadbalancer.server.port=4000"

  mongodb_product:
    container_name: product-catalog-product-mongodb
    image: mongo:4.2.11
    # ports:
      # - target: 27017
      #   published: 27017
      #   protocol: tcp
      #   mode: host
    volumes:
      - type: bind
        source: ./database
        target: /database

  auth:
    container_name: product-catalog-auth-services
    build: ./auth
    depends_on:
      - pgsql_auth
    labels: 
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/auth/`)"
      - "traefik.http.services.auth.loadbalancer.server.port=4000"

  pgsql_auth:
    container_name: product-catalog-auth-pgsql
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: auth
      PGDATA: /auth/data 
  
  adminer_auth:
    container_name: product-catalog-auth-adminer
    image: adminer
    depends_on:
      - pgsql_auth
    ports:
      - 8091:8080
